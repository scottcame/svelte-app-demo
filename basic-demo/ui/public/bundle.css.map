{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "../src/App.svelte",
    "../src/Sub.svelte"
  ],
  "sourcesContent": [
    "<script>\n\n  import moment from 'moment';\n  import { library } from \"@fortawesome/fontawesome\";\n  import { faArrowAltCircleRight } from \"@fortawesome/fontawesome-free-solid\";\n  import Sub from \"./Sub.svelte\";\n  import { echo } from \"./silly-function.js\";\n  import { Person } from \"./silly-class.js\";\n\n  library.add(faArrowAltCircleRight);\n\n  export let name;\n  let time = moment().format('LLLL');\n\n  // just making sure this doesn't throw an error in the browser due to missing function\n  // (this is to test that polyfills are properly included)\n  let aa = Array.from('foo');\n\n  let foo = echo('foox');\n  let p = new Person(\"2018-01-02\");\n\n</script>\n\n<style>\n  h1 {\n    color: rgb(24, 32, 107);\n  }\n  div.demo {\n    color: #0c3912;\n    margin: 20px;\n    padding: 8px;\n    font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Oxygen-Sans, Ubuntu, Cantarell, \"Helvetica Neue\", sans-serif;\n  }\n  div.demo-card {\n    width: 30%;\n  }\n</style>\n\n<div class=\"container-fluid demo\">\n\n  <p>This content is inside a div that is a bootstrap 4 fluid container, to demo use of bootstrap</p>\n\n  <p>Demo use of variable (copied in from basic svelte getting started demo):\n  <h1>Hello {name}!</h1>\n\n  <p>Demo use of external javascript library (in this case, moment.js): {time}</p>\n\n  <p>A list that uses fontawesome icons for bullets:</p>\n\n  <ul class=\"fa-ul\">\n  <li><span class=\"fa-li\" ><i class=\"fas fa-arrow-alt-circle-right\"></i></span>Item 1</li>\n  <li><span class=\"fa-li\" ><i class=\"fas fa-arrow-alt-circle-right\"></i></span>Item 2</li>\n  </ul>\n\n  <p>A bootstrap card:</p>\n\n  <div class=\"card demo-card\">\n    <div class=\"card-header\">Card Header</div>\n    <div class=\"card-body\">Card content</div>\n    <div class=\"card-footer\">Card Footer</div>\n  </div>\n\n  <div class=\"fave\">\n    <p class='pt-3'>This should appear purple, because we're using the global style defined in the global.scss file. This gets compiled at the top of the build. whoa</p>\n  </div>\n\n  <Sub/>\n\n  <p>This should say \"foox\": {foo}</p>\n  <p>The person was born on a {p.birthDayOfWeek}</p>\n\n</div>\n",
    "<script>\n\n</script>\n\n<style>\n\n.foo {\n  font-style: italic;\n}\n\n</style>\n\n<div class=\"foo\">This is a sub-component nested within the main component.</div>\n"
  ],
  "names": [],
  "mappings": "AAwBE,EAAE,cAAC,CAAC,AACF,KAAK,CAAE,IAAI,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,AACzB,CAAC,AACD,GAAG,KAAK,cAAC,CAAC,AACR,KAAK,CAAE,OAAO,CACd,MAAM,CAAE,IAAI,CACZ,OAAO,CAAE,GAAG,CACZ,WAAW,CAAE,aAAa,CAAC,CAAC,kBAAkB,CAAC,CAAC,UAAU,CAAC,CAAC,MAAM,CAAC,CAAC,WAAW,CAAC,CAAC,MAAM,CAAC,CAAC,SAAS,CAAC,CAAC,gBAAgB,CAAC,CAAC,UAAU,AAClI,CAAC,AACD,GAAG,UAAU,cAAC,CAAC,AACb,KAAK,CAAE,GAAG,AACZ,CAAC;AC7BH,IAAI,eAAC,CAAC,AACJ,UAAU,CAAE,MAAM,AACpB,CAAC"
}